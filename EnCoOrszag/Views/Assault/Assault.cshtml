@model EnCoOrszag.ViewModell.AssaultViewModel
<html ng-app="AssaultApp">
    <head>
        <style>
            table, th, td {
                border: 1px solid black;
            }

            th, td {
                padding: 10px;
                align-items: center;
                align-content: center;
            }
        </style>
        <script type="text/javascript" src="~/Scripts/angular.min.js"></script>
        <script type="text/javascript" src="~/Scripts/GameScripts/Assault.js"></script>
    </head>
    <body>
        

        @{
            ViewBag.Title = "Assault";
        }
        <h2>Assault</h2>
        <div ng-controller="ArmyController as AC">
            <h3>Your forces in the country.</h3>
            <table>
                <tr ng-repeat="unit in AC.armyStore">
                    <td>{{unit["Type"]["Name"]}}</td>
                    <td>{{unit["Size"]}}</td>
                    <td>{{unit}}</td> <!-- Test -->
                </tr>
            </table>
            <br />
        </div>
        


        <div name="Test" ng-controller="Test as t">
            <!-- Read about how async ajax works!-->
           @using (Html.BeginForm("", "", FormMethod.Post)) 
           {
                  <input ng-model="archer"/>
    
               
                <input type="submit" ng-disabled=t.canSend() value="Assault"/>
           }
        </div>



        <div ng-controller="AssaultController as AC">
            <h3>Your current assaults.</h3>
            <table>
                <tr>
                    <th>Target</th>
                    <th colspan="3">Force</th>
                </tr>
                <tr ng-repeat="assault in AC.assaultStore">
                    <td>{{assault["Country"]["Name"]}}</td>
                    <td ng-repeat="force in assault.Forces">
                        {{force["Type"]["Name"]}}: {{force["Size"]}} 
                    </td>
                </tr>
            </table>
        </div>
    </body>


</html>

<script>
    var armyModel = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Armies));
    var countries = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Countries));
    var assaults = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Assaults));
</script>