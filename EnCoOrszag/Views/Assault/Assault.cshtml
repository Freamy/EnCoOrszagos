@model EnCoOrszag.ViewModell.AssaultViewModel
<html ng-app="AssaultApp">
    <head>
        <style>
            table, th, td {
                border: 1px solid black;
            }

            th, td {
                padding: 10px;
                align-items: center;
                align-content: center;
            }
        </style>
        <script type="text/javascript" src="~/Scripts/angular.min.js"></script>
        <script type="text/javascript" src="~/Scripts/GameScripts/Assault.js"></script>
    </head>
    <body>
        @{
            ViewBag.Title = "Assault";
            
        }

        @ViewBag.Message

        <div ng-controller="MainEnCoController as Cont">
            <!-- Your own forces -->
            <h3>Your forces in the country.</h3>
            <table>
                <tr ng-repeat="unit in Cont.armyStore">
                    <td>{{unit["Type"]["Name"]}}</td>
                    <td>{{unit["Size"]}}</td>
                </tr>
            </table>
            <br />

            <input ng-model="archer" type="text" />
            <input ng-model="knight" type="text" />
            <input ng-model="elite" type="text" />
            <button ng-disabled="Cont.canSend()" ng-click="Cont.sendArmy()"> Assault </button>

        
            <br /><br />
            <label>Target country: </label>
            <select ng-model="target">
                <option ng-repeat="country in Cont.countryStore" value={{country["Name"]}}>{{country["Name"]}}</option>
            </select>

            <h3>Your current assaults.</h3>
            {{Cont.null}}
            <table>
                <tr>
                    <th>Target</th>
                    <th colspan="3">Force</th>
                </tr>
                <tr ng-repeat="assault in Cont.assaultStore">
                    <td>{{assault["Country"]["Name"]}}</td>
                    <td ng-repeat="force in assault.Forces">
                        {{force["Type"]["Name"]}}: {{force["Size"]}}
                    </td>
                </tr>
            </table>
        </div>

    </body>

</html>

<script>
    var armyModel = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Armies));
    var countries = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Countries));
    var assaults = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Assaults));

    var archerAmount = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Armies.First(m => m.Type.Name == "Archer").Size));
    var knightAmount = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Armies.First(m => m.Type.Name == "Knight").Size));
    var eliteAmount = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Armies.First(m => m.Type.Name == "Elite").Size));
</script>